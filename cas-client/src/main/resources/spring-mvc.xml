<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<description>Spring MVC Configuration</description>

	<!-- 默认的注解映射的支持，自动注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
	<!-- <mvc:annotation-driven /> -->

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<!-- <mvc:annotation-driven> -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<!-- 设置请求body支持的类型 -->
						<value>application/x-www-form-urlencoded</value>
						<value>application/atom+xml;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
						<value>application/xml;charset=UTF-8</value>
					</list>
				</property>
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- 内容协商-同一资源的多种表现 -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 扩展名至mimeType的映射,即 /***.json => application/json -->
		<property name="favorPathExtension" value="true" />
		<!-- 用于开启 /***?format=json 的支持 -->
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="format" />
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 默认的content type ,在没有扩展名和参数时即/***/*** 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />
		<!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<!-- <property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
		</property> -->
	</bean>

	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.xbw"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 定义视图文件解析 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<!-- SpringMVC3.0之后推荐使用 -->
	<mvc:default-servlet-handler />

	<!-- 对静态资源文件的访问 -->
	<!-- <mvc:resources mapping="/images/**" location="/WEB-INF/images/"/> -->
	<!-- <mvc:resources mapping="/js/**" location="/WEB-INF/js/" /> -->
	<!-- <mvc:resources mapping="/css/**" location="/WEB-INF/css/"/> -->

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000" />


</beans>